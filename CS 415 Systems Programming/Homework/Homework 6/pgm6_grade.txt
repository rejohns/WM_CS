CSCI415
Spring 2014
Programming Assignment 6: Grading Form

STUDENT NAME: Johns, Robert E.
  
GRADE: [20/20]
SLIP DAYS ON THIS ASSIGNMENT: 2
CUMULATIVE SLIP DAYS: 4

============================================================


OVERALL GRADE: XX/20

1. Basic operation [10 points total]:

   Copy contents of ~kearns/public/415/p6 into a directory where
   testing is to be done. (Note that the working directory is the
   PARENT directory of testdir.)

   These files define the initial valid archive directory from
   which testing begins. Copy student's archive script into the
   working directory (i.e., the parent of testdir).
   
a. [1 pt]  Simple list:
     
           ./archive testdir -S

           Make sure output is valid and complete.
  1 
b. [2 pts] Simple addition:

           ./archive testdir -a add_me -s "Added Message"

           Check that:
           - file 21 is created
           - the file has valid contents
           - the bounds file contains 18:21
           - no orphaned temporary files are left behind (look
             at source to see if temp files created)
2
c. [2 pts] Simple deletion:
  
           If the above two tests worked without a problem,
           test in the directory as it stands. If there was a problem,
           especially with 1b, remake the test directory from scratch
           and adjust the tests below accordingly.

           ./archive testdir -d 20

           Check that:
           - the original file 20 was deleted
           - 19 -> 20
           - 18 -> 19
           - 21 isn't affected
           - the directory is left with files 19, 20 and 21 with
             valid contents
           - the bounds file contains 19:21
           - there are no orphaned temporary files
2	   
d. [2 pts] Searching - subject line:

           Follow the same instructions as in part c.

           ./archive testdir -ss "is"

           Check correctness of output, including restriction that
           a message appear only once per search.
2
e. [1 pts] Searching - message body and no matches:

	Follow the same instructions as in part c.

	./archive testdir -sb zippy

	Should produce no output.
1
f. [2 pts] Empty archive and add new message:

	Follow  the same instructions as in part c.

	./archive testdir -d 19
	./archive testdir -d 20
	./archive testdir -d 21
	./archive testdir -S	====>	should see an empty archive
	./archive testdir -a add_me -s "Added Message"
	./archive testdir -S	====>	should see archive with message 22
					(the 22 is important)

2

2. Some special tests [9 points total]:
           
           Each of the following tests should be run in a clean
           test directory named testdir, created from ~kearns/public/415/p6.

a. [1 pts] Permuted argument order:

           ./archive testdir -s "Added Message" -a add_me

           Should work exactly as 1(b).
1
b. [1 pt]  Invalid argument:

           ./archive testdir -x 19

           Should exit with an appropriate error message without
           changing the archive in any way.
1
c. [2 pts] Missing file:

           ./archive testdir -a bogus -s "No Way"

           Should exit with an appropriate error message without
           changing the archive in any way.
 2          
d. [1 pt] Invalid deletion:

           ./archive testdir -d 25

           Should exit with an appropriate error message without
           changing the archive in any way.
1
e. [2 pts] Odd subject: 
	   
           ./archive testdir -a add_me -s 'Subject With a : Here'
           ./archive testdir -S

           Should get a correctly modified archive, followed by
           a good summary listing.
2
f. [2 pts] Invalid subject:

           ./archive testdir -a add_me -s 'Subject with a - in it'

           Should not add message and should give appropriate
           error message.
2
3. [1 pt]  Directory creation:  1
           
           ./archive -c newtestdir

           Make sure the directory and valid bounds file are created.
